//	Copyright (C) 2017 Thomas Duployez (CMDR Touille)
//	V2.2.03.4b	2017/02
//	Distributed freely under the MIT License.
//	
//	Permission is hereby granted, free of charge, to any person obtaining a copy
//	of this software and associated documentation files (the "Software"), to deal
//	in the Software without restriction, including without limitation the rights
//	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
//	copies of the Software, and to permit persons to whom the Software is
//	furnished to do so, subject to the following conditions:
//	
//	The above copyright notice and this permission notice shall be included in all
//	copies or substantial portions of the Software.
//	
//	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
//	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
//	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
//	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
//	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
//	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
//	SOFTWARE.
//--------------------------------------------------------------------------------------------------------------------------------------------------------------//
//	MACRO VARIABLE INITALISATION																																//
//--------------------------------------------------------------------------------------------------------------------------------------------------------------//

	int mRequestCancelDock, mSystemJump, mEscapeFight, mHeatSinkonSilentRuning, mClassifiedCamera;

//--------------------------------------------------------------------------------------------------------------------------------------------------------------//
//	MACRO FUNCTIONS																																				//
//		All delay can be edited in Settings file																												//
//			D()					75			//Default Delay 75																									//
//			MiniPulseDelay		150			//Shortest Delay 150																								//
//			ShortPulseDelay		250			//Shorter Delay 250																									//
//			MediumPulseDelay	350			//Medium Delay 350																									//
//			LongPulseDelay		500			//Long Delay 500																									//
//			ExtraPulseDelay		2000		//Longest Delay 2000																								//
//			FSDOFFDelay			25000		//When to Press 0 Speed Key after Engaging FSD (Safe System Jump) Delay 25000										//
//--------------------------------------------------------------------------------------------------------------------------------------------------------------//
	
	int initCustomCommands(){

		//MACRO: Auto-Docking Request
		mRequestCancelDock = CHAIN(
			LOCK+
			PULSE+TargetPanel,    D(MiniPulseDelay),
			PULSE+UINextPanel,    D(MiniPulseDelay),
			PULSE+UINextPanel,    D(MiniPulseDelay),
			PULSE+UISelect,       D(MiniPulseDelay),
			PULSE+UIDown,         D(MiniPulseDelay),
			PULSE+UISelect,       D(MiniPulseDelay),
			PULSE+UIPrevPanel,    D(MiniPulseDelay),
			PULSE+UIPrevPanel,    D(MiniPulseDelay),
			PULSE+UIBack,         D(MiniPulseDelay),
			PULSE+SetSpeed0,
			LOCK);

		//MACRO: System Jump
		mSystemJump = CHAIN(
			PULSE+SelectNextSystemInRoute,  D(ShortPulseDelay),
			PULSE+SetSpeed100,              D(ExtraPulseDelay),
			EXEC("initFrameShiftDrive();"), D(FSDOFFDelay),
			PULSE+SetSpeed0);
			
		//MACRO: Escape Fight
		mEscapeFight = CHAIN(
			PULSE+SetSpeed100, D(MediumPulseDelay),
			PULSE+EngineBoost, D(LongPulseDelay),
			PULSE+EngineBoost, D(LongPulseDelay),
			EXEC("initSuperCruise();"));
			
		//MACRO: Heat Sink on Silence Runing
		mHeatSinkonSilentRuning = CHAIN(
			PULSE+SilentRunning, D(HeatSinkonSilentRuningDelay),
			PULSE+DeployHeatSink);
	
		//MACRO: Classified (External) 'Debug' Camera
		mClassifiedCamera = CHAIN(
			PULSE+SetSpeed0,        D(ShortPulseDelay),
			PULSE+ClassifiedCamera, D(LongPulseDelay),
			PULSE+SPC);
	
	}